[DEFAULT]
# Show more verbose log output (sets INFO log level output)
verbose = True

# Show debugging output in logs (sets DEBUG log level output)
debug = False

#log_file = /var/log/magnetodb/magnetodb.log

storage_manager_config =
    {
        "cassandra_connection": {
            "type": "eval",
            "args": [
                "importutils.import_class('magnetodb.common.cassandra.io.eventletreactor.EventletConnection')"
            ]
        },
        "round_robin_load_balancing_policy": {
            "type": "cassandra.policies.RoundRobinPolicy"
        },
        "load_balancing_policy": {
            "type": "cassandra.policies.TokenAwarePolicy",
            "args": ["@round_robin_load_balancing_policy"]
        },
        "cluster_params": {
            "type": "dict",
            "kwargs": {
                "connection_class": "@cassandra_connection",
                "contact_points": ["localhost"],
                "load_balancing_policy": "@load_balancing_policy",
                "max_schema_agreement_wait": 60
            }
        },
        "cluster_handler": {
            "type": "magnetodb.common.cassandra.cluster_handler.ClusterHandler",
            "kwargs": {
                "cluster_params": "@cluster_params",
                "query_timeout": 300,
                "concurrent_queries": 100
            }
        },
        "table_info_repo": {
            "type": "magnetodb.storage.table_info_repo.cassandra_impl.CassandraTableInfoRepository",
            "kwargs": {
                "cluster_handler": "@cluster_handler"
            }
        },
        "storage_driver": {
            "type": "magnetodb.storage.driver.cassandra.cassandra_with_custom_lsi_impl.CassandraStorageDriverWithCustomLSI",
            "kwargs": {
                "cluster_handler": "@cluster_handler",
                "default_keyspace_opts": {
                    "replication": {
                        "replication_factor": 3,
                        "class": "SimpleStrategy"
                    }
                }
            }
        }
    }
