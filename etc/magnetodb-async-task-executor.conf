[DEFAULT]
# Show more verbose log output (sets INFO log level output)
verbose = True

# Show debugging output in logs (sets DEBUG log level output)
debug = True

#log_file = /var/log/magnetodb/magnetodb-async-task-executor.log

# Use syslog for logging. (boolean value)
# use_syslog = True

# Syslog facility to receive log lines (string value)
# syslog_log_facility = LOG_USER

# Format exception prefix without timestamp and log level for stack trace
logging_exception_prefix = '%(instance)s'


# ============ RPC Configuration Options =====================

# RPC configuration options. Defined in rpc __init__
# The messaging module to use, defaults to kombu.
# rpc_backend = magnetodb.openstack.common.rpc.impl_kombu
# Size of RPC thread pool
# rpc_thread_pool_size = 64
# Size of RPC connection pool
# rpc_conn_pool_size = 30
# Seconds to wait for a response from call or multicall
# rpc_response_timeout = 60
# Seconds to wait before a cast expires (TTL). Only supported by impl_zmq.
# rpc_cast_timeout = 30
# Modules of exceptions that are permitted to be recreated
# upon receiving exception data from an rpc call.
# allowed_rpc_exception_modules = neutron.openstack.common.exception, nova.exception
# AMQP exchange to connect to if using RabbitMQ or QPID
control_exchange = magnetodb
amqp_durable_queues = True

# If passed, use a fake RabbitMQ provider
# fake_rabbit = False

# Configuration options if sending notifications via kombu rpc (these are
# the defaults)
# SSL version to use (valid only if SSL enabled)
# kombu_ssl_version =
# SSL key file (valid only if SSL enabled)
# kombu_ssl_keyfile =
# SSL cert file (valid only if SSL enabled)
# kombu_ssl_certfile =
# SSL certification authority file (valid only if SSL enabled)
# kombu_ssl_ca_certs =
# IP address of the RabbitMQ installation
# rabbit_host = localhost
# Password of the RabbitMQ server
# rabbit_password = guest
# Port where RabbitMQ server is running/listening
# rabbit_port = 5672
# RabbitMQ single or HA cluster (host:port pairs i.e: host1:5672, host2:5672)
# rabbit_hosts is defaulted to '$rabbit_host:$rabbit_port'
# rabbit_hosts = localhost:5672
# User ID used for RabbitMQ connections
# rabbit_userid = guest
# Location of a virtual RabbitMQ installation.
# rabbit_virtual_host = /
# Maximum retries with trying to connect to RabbitMQ
# (the default of 0 implies an infinite retry count)
# rabbit_max_retries = 0
# RabbitMQ connection retry interval
# rabbit_retry_interval = 1
# Use HA queues in RabbitMQ (x-ha-policy: all). You need to
# wipe RabbitMQ database when changing this option. (boolean value)
# rabbit_ha_queues = false

# QPID
# rpc_backend=neutron.openstack.common.rpc.impl_qpid
# Qpid broker hostname
# qpid_hostname = localhost
# Qpid broker port
# qpid_port = 5672
# Qpid single or HA cluster (host:port pairs i.e: host1:5672, host2:5672)
# qpid_hosts is defaulted to '$qpid_hostname:$qpid_port'
# qpid_hosts = localhost:5672
# Username for qpid connection
# qpid_username = ''
# Password for qpid connection
# qpid_password = ''
# Space separated list of SASL mechanisms to use for auth
# qpid_sasl_mechanisms = ''
# Seconds between connection keepalive heartbeats
# qpid_heartbeat = 60
# Transport to use, either 'tcp' or 'ssl'
# qpid_protocol = tcp
# Disable Nagle algorithm
# qpid_tcp_nodelay = True

# ZMQ
# rpc_backend=neutron.openstack.common.rpc.impl_zmq
# ZeroMQ bind address. Should be a wildcard (*), an ethernet interface, or IP.
# The "host" option should point or resolve to this address.
# rpc_zmq_bind_address = *


# ============ Notification System Options =====================

# Notifications can be sent when tables are created, or deleted,
# or data items are inserted/deleted/updated/retrieved.
# There are three methods of sending notifications: logging (via the
# log_file directive), rpc (via a message queue) and
# noop (no notifications sent, the default)

# Notification_driver can be defined multiple times
# Do nothing driver
# notification_driver = no-op
# Logging driver
notification_driver = log
# RPC driver.
# notification_driver = messaging

# together with default_publisher_id, this becomes the publisher_id.
# For example: magnetodb.myhost.com.
# notification_service = magnetodb

# default_publisher_id is a part of the notification payload
# host = myhost.com
# default_publisher_id = $host

# Defined in rpc_notifier, can be comma separated values.
# The actual topic names will be %s.%(default_notification_level)s
# notification_topics = notifications


storage_manager_config =
    {
        "cassandra_connection": {
            "type": "eval",
            "args": [
                "importutils.import_class('magnetodb.common.cassandra.io.eventletreactor.EventletConnection')"
            ]
        },
        "round_robin_load_balancing_policy": {
            "type": "cassandra.policies.RoundRobinPolicy"
        },
        "load_balancing_policy": {
            "type": "cassandra.policies.TokenAwarePolicy",
            "args": ["@round_robin_load_balancing_policy"]
        },
        "cluster_params": {
            "type": "dict",
            "kwargs": {
                "connection_class": "@cassandra_connection",
                "contact_points": ["localhost"],
                "load_balancing_policy": "@load_balancing_policy",
                "control_connection_timeout": 60,
                "max_schema_agreement_wait": 300
            }
        },
        "cluster_handler": {
            "type": "magnetodb.common.cassandra.cluster_handler.ClusterHandler",
            "kwargs": {
                "cluster_params": "@cluster_params",
                "query_timeout": 60,
                "concurrent_queries": 100
            }
        },
        "table_info_repo": {
            "type": "magnetodb.storage.table_info_repo.cassandra_impl.CassandraTableInfoRepository",
            "kwargs": {
                "cluster_handler": "@cluster_handler"
            }
        },
        "storage_driver": {
            "type": "magnetodb.storage.driver.cassandra.cassandra_impl.CassandraStorageDriver",
            "kwargs": {
                "cluster_handler": "@cluster_handler",
                "default_keyspace_opts": {
                    "replication": {
                        "replication_factor": 3,
                        "class": "SimpleStrategy"
                    }
                }
            }
        }
    }

[PROBE]
enabled = True
