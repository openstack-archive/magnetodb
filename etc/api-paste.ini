[pipeline:main]
pipeline = probe_filter connection_handler faultwrapper rate_limit ec2authtoken tokenauth contextwrapper magnetodb_app

[filter:connection_handler]
paste.filter_factory = magnetodb.common.middleware.connection_handler:factory_method

[filter:faultwrapper]
paste.filter_factory = magnetodb.common.middleware.fault:FaultWrapper.factory_method
show_trace =

[filter:ec2authtoken]
paste.filter_factory = magnetodb.common.middleware.ec2token:EC2Token_filter_factory
auth_uri = http://127.0.0.1:5000/v3

[filter:tokenauth]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
auth_host = 127.0.0.1
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = magnetodb
admin_password = test
auth_version = v3.0
# admin_token = be19c524ddc92109a224
# signing_dir is configurable, but the default behavior of the authtoken
# middleware should be sufficient.  It will create a temporary directory
# in the home directory for the user the MagnetoDB process is running as.
#signing_dir = /var/lib/magnetodb/keystone-signing

[filter:contextwrapper]
paste.filter_factory = magnetodb.common.middleware.context:ContextMiddleware.factory_method
tenant_id = default_tenant
user_id = default_user
auth_token = ""
is_admin = False

[filter:rate_limit]
paste.filter_factory = magnetodb.common.middleware.rate_limit:RateLimitMiddleware.factory_method
rps_per_tenant = 0

[filter:probe_filter]
paste.filter_factory = magnetodb.common.middleware.probe_filter:ProbeFilter.factory_method

[app:magnetodb_app]
paste.app_factory = magnetodb.api.wsgi:MagnetoDBApplication.factory_method
oslo_config_args = --config-file $here/magnetodb-api.conf
